<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ch.ninecode.cim</groupId>
        <artifactId>CIMSpark</artifactId>
        <relativePath>../pom.xml</relativePath>
        <version>2.11-2.4.3-3.6.1</version>
    </parent>
    <artifactId>CIMExport</artifactId>
    <name>${project.artifactId}</name>

    <description>Export Spark RDD as CIM files partitioned by topological island or transformer service area</description>
    <inceptionYear>2019</inceptionYear>
    <url>https://github.com/derrickoswald/CIMSpark/tree/master/CIMExport</url>
    <organization>
        <name>9code GmbH</name>
        <url>http://9code.ch</url>
    </organization>
    <scm>
        <url>git@github.com:derrickoswald/CIMSpark.git</url>
        <connection>scm:git:git@github.com:derrickoswald/CIMSpark.git</connection>
        <developerConnection>scm:git:git@github.com:derrickoswald/CIMSpark.git</developerConnection>
    </scm>
    <issueManagement>
        <url>https://github.com/derrickoswald/CIMSpark/issues</url>
    </issueManagement>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <comments>see https://github.com/derrickoswald/CIMSpark/blob/master/LICENSE.md</comments>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Derrick Oswald</name>
            <email>derrick.oswald@9code.ch</email>
            <id>derrickoswald</id>
            <organization>9code GmbH</organization>
            <organizationUrl>http://9code.ch/</organizationUrl>
            <timezone>1</timezone>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <properties>
                <keybase>https://keybase.io/derrickoswald</keybase>
                <picUrl>https://secure.gravatar.com/avatar/d659afe3730a534914c5555640d326b3</picUrl>
            </properties>
        </developer>
    </developers>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <properties>
        <version.dependency.cassandra_driver>4.1.0</version.dependency.cassandra_driver>
        <version.dependency.cassandra_maven>3.6</version.dependency.cassandra_maven>
        <version.dependency.log4j>2.12.1</version.dependency.log4j>
        <version.dependency.netty-all>4.1.41.Final</version.dependency.netty-all>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${version.dependency.scala}</artifactId>
            <version>${version.dependency.scopt}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>ch.ninecode.cim</groupId>
            <artifactId>CIMReader</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.datastax.spark</groupId>
            <artifactId>spark-cassandra-connector_${version.dependency.scala}</artifactId>
            <version>${version.dependency.cassandra_spark}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-reflect</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${version.dependency.scalalibrary}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${version.dependency.scalalibrary}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${version.dependency.scala}</artifactId>
            <version>${version.dependency.spark}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${version.dependency.scala}</artifactId>
            <version>${version.dependency.spark}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-graphx_${version.dependency.scala}</artifactId>
            <version>${version.dependency.spark}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${version.dependency.scala}</artifactId>
            <version>${version.dependency.scalatest}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.dependency.junit}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>4.1.17.Final</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <!-- NOTE: in order to get maven and scala to work together in Eclipse
                     I needed to install the maven-scala plugin
                     see:
                     http://alchim31.free.fr/m2e-scala/update-site/
                     https://github.com/davidB/scala-maven-plugin
                     http://davidb.github.com/scala-maven-plugin
                     https://mvnrepository.com/artifact/net.alchim31.maven/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${version.dependency.scalamavenplugin}</version>
                <configuration>
                    <scalaCompatVersion>${version.dependency.scala}</scalaCompatVersion>
                    <scalaVersion>${version.dependency.scalalibrary}</scalaVersion>
                    <args>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>-Xss4m</jvmArg>
                    </jvmArgs>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <goals>
                                <goal>doc</goal>
                            </goals>
                            <reportOutputDirectory>${project.build.directory}/doc</reportOutputDirectory>
                            <args>
                                <arg>-groups</arg>
                            </args>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-groups</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>CIMExportSuite.txt</filereports>
                    <suites>ch.ninecode.cim.CIMExportSuite</suites>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- assembly for stand-alone program -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-CIMExport-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>CIMExport-${project.version}</finalName>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <mainClass>ch.ninecode.cim.CIMExportMain</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- source jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- signing artifacts -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
                            <keyname>${gpg.keyname}</keyname>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- deploy artifacts -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${version.dependency.maven-deploy-plugin}</version>
            </plugin>
        </plugins>
    </build>
</project>
